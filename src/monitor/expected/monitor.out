-- Copyright (c) Microsoft Corporation. All rights reserved.
-- Licensed under the PostgreSQL License.
\x on
select * from pgautofailover.register_node('default', 'localhost', 9876, 'postgres');
-[ RECORD 1 ]--------+-------
assigned_node_id     | 1
assigned_group_id    | 0
assigned_group_state | single

select * from pgautofailover.register_node('default', 'localhost', 9877, 'postgres');
-[ RECORD 1 ]--------+-------------
assigned_node_id     | 2
assigned_group_id    | 0
assigned_group_state | wait_standby

select * from pgautofailover.node_active('default', 'localhost', 9876);
-[ RECORD 1 ]--------+-------
assigned_node_id     | 1
assigned_group_id    | 0
assigned_group_state | single

select * from pgautofailover.node_active('default', 'localhost', 9877);
-[ RECORD 1 ]--------+-------------
assigned_node_id     | 2
assigned_group_id    | 0
assigned_group_state | wait_standby

table pgautofailover.formation;
-[ RECORD 1 ]-+---------
formationid   | default
kind          | pgsql
dbname        | postgres
opt_secondary | t

-- dump the pgautofailover.node table, omitting the timely columns
select formationid, nodeid, groupid, nodename, nodeport,
       goalstate, reportedstate, reportedpgisrunning, reportedrepstate
  from pgautofailover.node;
-[ RECORD 1 ]-------+-------------
formationid         | default
nodeid              | 1
groupid             | 0
nodename            | localhost
nodeport            | 9876
goalstate           | single
reportedstate       | init
reportedpgisrunning | t
reportedrepstate    | unknown
-[ RECORD 2 ]-------+-------------
formationid         | default
nodeid              | 2
groupid             | 0
nodename            | localhost
nodeport            | 9877
goalstate           | wait_standby
reportedstate       | init
reportedpgisrunning | t
reportedrepstate    | unknown

select * from pgautofailover.get_primary('unknown formation');
ERROR:  group has no writable node right now
select * from pgautofailover.get_primary(group_id => -10);
ERROR:  group has no writable node right now
select * from pgautofailover.get_primary();
ERROR:  group has no writable node right now
select * from pgautofailover.get_primary('default', 0);
ERROR:  group has no writable node right now
select * from pgautofailover.get_other_node('localhost', 9876);
-[ RECORD 1 ]--+----------
secondary_name | localhost
secondary_port | 9877

select pgautofailover.remove_node('localhost', 9876);
-[ RECORD 1 ]--
remove_node | t

table pgautofailover.formation;
-[ RECORD 1 ]-+---------
formationid   | default
kind          | pgsql
dbname        | postgres
opt_secondary | t

-- dump the pgautofailover.node table, omitting the timely columns
select formationid, nodeid, groupid, nodename, nodeport,
       goalstate, reportedstate, reportedpgisrunning, reportedrepstate
  from pgautofailover.node;
-[ RECORD 1 ]-------+----------
formationid         | default
nodeid              | 2
groupid             | 0
nodename            | localhost
nodeport            | 9877
goalstate           | single
reportedstate       | init
reportedpgisrunning | t
reportedrepstate    | unknown

select * from pgautofailover.node_active('default', 'localhost', 9876);
ERROR:  node localhost:9876 is not registered
-- should fail as there's no primary at this point
select pgautofailover.perform_failover();
ERROR:  cannot fail over: group does not have 2 nodes
